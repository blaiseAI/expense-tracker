/**
 * Gallery Filter
 *
 */
// Application Scope
window.addEventListener('load', e => {
  // This part is not part of the assignment just playing around
  console.group('Gallery Filter Assignment 2');
  console.info('Author: Blaise Sebagabo');
  console.groupEnd();
  console.log('**************************');
  // end of Project Details

  // Grabbing the DOM
  const filterArgumentValue = document.querySelector('input');
  const galleryItem = document.querySelectorAll('.thumb-display');
  const results = document.querySelector('#messages');
  const reset = document.querySelector('.reset');

  // console.log(galleryList);
  /**
   * Create an eventlistener
   * to check the search argument
   * on the filterArgumentValue
   *  */

  filterArgumentValue.addEventListener('input', e => {
    const filteredValue = filterArgumentValue.value.trim();
    if (filteredValue != '') {
      reset.classList.remove('hidden');
    } else {
      reset.classList.add('hidden');
    }
    filterGallery(filteredValue);
  }); //eofFilterEvtLlistener

  /**
   * Filter Gallery Method() that takes
   *  in a filterValue as an argument
   */
  function filterGallery(filterArg) {
    /**
     * Filter first and return what you want
     */

    const WorkingArray = [...galleryItem];

    let x = WorkingArray.map(element => {
      const tags = element.querySelector('.tags').textContent;
      return tags;
    });

    //const result = x.filter()
    // const result = WorkingArray.filter(WorkingArray => WorkingArray.length > 6);

    // console.log(result);

    // WorkingArray.forEach(element => {
    //   console.log(element);
    // });

    /**
     * End of Filter
     */

    galleryItem.forEach((element, index) => {
      // The code bellow will query all the tags withing our gallery nodelist
      const tags = element.querySelector('.tags').textContent;

      //console.log(element);

      if (!tags.includes(filterArg)) {
        // console.log('hide');
        element.style.display = 'none';
        results.classList.remove('hidden');
      } else {
        results.classList.add('hidden');
        element.style.transition = '0.8s';
        element.style.display = null;
      }
    });
  }
}); // No code outside of the applicatio scope

